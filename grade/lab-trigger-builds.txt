#!/bin/bash
#
# Copyright 2017 Red Hat, Inc.
#
# NAME
#     lab-trigger-builds - grading script for DO288 ch04s06 ge
#
# SYNOPSIS
#     lab-trigger-builds {setup|cleanup}
#
#        setup   - prepare the system for starting the lab
#        cleanup - perform post-lab cleanup
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, or solve for the particular lab of awesomeness.
#
# CHANGELOG
#   * Tue Nov 14 2017 Fernando Lozano <floznao@redhat.com>
#   - reproducibility fixes
#   - download container images as gzipped files
#   * Tue Nov 07 2017 Douglas Silva <dsilva@redhat.com>
#   - original code


PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'

# Required by the do288 shlib
this='trigger-builds'
title='GE: Triggering Builds'

#Container images
installers_uri="/ocp3.6/x86_64/installers"
php_image="php-70-rhel7"
php_original="${installers_uri}/${php_image}-original.tar.gz"
php_newer="${installers_uri}/${php_image}-newer.tar.gz"


# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup cleanup)


function lab_setup {

  ocp_grab_lab_files 'no-solution'

  ocp_print_prereq_header

  ocp_check_openshift_up
  ocp_check_git_repo_exists 'trigger-builds'
  ocp_check_image_exists "rhscl/${php_image}"
  print_line ' Downloading new container image:'
  pad " ?New container image tgz file is available"
  ocp_check_http_status "${contents}/${php_newer}" '200 OK'
  ocp_download_file "${php_image}-newer.tar.gz" "${labs}/${this}" "${contents}/${php_newer}"  

  ocp_print_setup_footer

}

function lab_cleanup {

  ocp_print_cleanup_header

  ocp_cleanup_lab_files 'no-solution'

  ocp_admin_login_on_master
  #XXX displays nothing if the project does not exist
  ocp_delete_project "${this}"
  ocp_delete_project 'common'

  pad " ?Remove the new ${php_image} container image"
  docker rmi -f "rhscl/${php_image}:7.0-5.14" "rhscl/${php_image}:latest"
  print_SUCCESS
  #if docker rmi -f "rhscl/${php_image}:7.0-5.14" "rhscl/${php_image}:latest"
  #then
  #  print_SUCCESS
  #else
  #  print_FAIL
  #fi

  rm -rf /tmp/php
  mkdir /tmp/php
  ocp_download_file "${php_image}-original.tar.gz" /tmp/php  "${contents}/${php_original}"
  pad ' ?Load the original PHP S2I builder image'
  if docker load -i /tmp/php/"${php_image}-original.tar.gz"
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  pad ' ?Push the original PHP S2I builder image'
  if docker push "${reg_host}/rhscl/${php_image}:latest"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad ' ?Update the PHP S2I image stream'
  if ssh root@master oc import-image php -n openshift 
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " ?Remove the original PHP S2I builder container image"
  if docker rmi -f "rhscl/${php_image}:latest"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
